
/* @docs */
$radio-active-background-color: $primary !default;
$radio-border: 2px solid $grey !default;
$radio-checked-box-shadow-color: $radio-active-background-color !default;
$radio-checked-box-shadow-length: 0 0 0.5em !default;
$radio-checked-box-shadow-opacity: 0.8 !default;
$radio-disabled-opacity: $base-disabled-opacity !default;
$radio-focus-sibiling-box-shadow: $radio-checked-box-shadow-length rgba($grey, $radio-checked-box-shadow-opacity) !default;
$radio-label-padding: 0 0 0 .5em !default;
$radio-margin-sibiling: 0.5em !default;
$radio-size: 1.25em !default;
$radio-line-height: 1.25 !default;
/* @docs */

$HALF_MARGIN_EXPRESSION: "calc($margin / 2)";

.o-radio {
    outline: none;
    display: inline-flex;
    align-items: center;
    cursor: pointer;
    @include unselectable;
    @include variable('line-height', 'radio-line-height', $radio-line-height);
    @include variable('margin-right', 'radio-margin-sibiling', $radio-margin-sibiling);
    & + .o-radio:last-child {
        margin-right: 0;
    }
    input[type=radio] {
        position: absolute;
        left: 0;
        opacity: 0;
        outline: none;
        z-index: -1;
        + .o-radio-check {
            display: flex;
            flex-shrink: 0;
            position: relative;
            cursor: pointer;
            border-radius: 50%;
            @include variable('width', 'radio-size', $radio-size);
            @include variable('height', 'radio-size', $radio-size);
            transition-property: background;
            @include variable('transition-duration', 'transition-duration', $speed-slow);
            @include variable('transition-timing-function', 'transition-timing', $easing);
            @include variable('border', 'radio-border', $radio-border);
            &:before {
                content: "";
                display: flex;
                position: absolute;
                left: 50%;
                bottom: 50%;
                border-radius: 50%;
                transform: scale(0);
                transition-property: transform;
                @include evariable(
                    'margin-bottom', $HALF_MARGIN_EXPRESSION,
                    eparam('$margin', variable('radio-size', -$radio-size))
                );
                @include evariable(
                    'margin-left', $HALF_MARGIN_EXPRESSION,
                    eparam('$margin', variable('radio-size', -$radio-size))
                );
                @include variable('transition-duration', 'transition-duration', $speed-slow);
                @include variable('transition-timing-function', 'transition-timing', $easing);
                @include variable('width', 'radio-size', $radio-size);
                @include variable('height', 'radio-size', $radio-size);
                @include variable('background-color', 'radio-active-background-color', $radio-active-background-color);
            }
            @each $name, $pair in $colors {
                $color: nth($pair, 1);
                &.o-color-#{$name}:before {
                    @include variable('background', ('color-' + #{$name}), $color);
                }
            }
        }
        &:checked + .o-radio-check {
            @include variable('border-color', 'radio-active-background-color', $radio-active-background-color);
            @each $name, $pair in $colors {
                $color: nth($pair, 1);
                &.o-color-#{$name} {
                    @include variable('border-color', ('color-' + #{$name}), $color);
                }
            }
            &:before {
                transform: scale(.5);
            }
        }
        &:focus {
            + .o-radio-check {
                @include variable('box-shadow', 'radio-focus-sibiling-box-shadow', $radio-focus-sibiling-box-shadow);
            }
            &:checked + .o-radio-check {
                @include evariable(
                    'box-shadow', $JOIN_EXPRESSION,
                    eparam('$param1', variable('radio-checked-box-shadow-length', $radio-checked-box-shadow-length)),
                    eparam('$param2', variable('radio-active-background-color', $radio-active-background-color))
                );
                // box-shadow: $radio-checked-box-shadow-length rgba($radio-active-background-color, $radio-checked-box-shadow-opacity);
                @each $name, $pair in $colors {
                    $color: nth($pair, 1);
                    &.o-color-#{$name} {
                        @include evariable(
                            'box-shadow', $JOIN_EXPRESSION,
                            eparam('$param1', variable('radio-checked-box-shadow-length', $radio-checked-box-shadow-length)),
                            eparam('$param2', variable('color-' + #{name}, $color))
                        );
                        // box-shadow: $radio-checked-box-shadow-length rgba($color, $radio-checked-box-shadow-opacity);
                    }
                }
            }
        }
    }
    .o-radio-label {
        @include variable('padding', 'radio-label-padding', $radio-label-padding);
    }
    &.o-radio-button {
        display: flex;
    }
    &[disabled] {
        @include variable('opacity', 'radio-disabled-opacity', $radio-disabled-opacity);
    }
    &:hover {
        input[type=radio]:not(:disabled) + .o-radio-check {
            @include variable('border-color', 'radio-active-background-color', $radio-active-background-color);
            @each $name, $pair in $colors {
                $color: nth($pair, 1);
                &.o-color-#{$name} {
                    @include variable('border-color', ('color-' + #{$name}), $color);
                }
            }
        }
    }
    @each $name, $value in $sizes {
        &.o-size-#{$name} {
            @include variable('font-size', ('radio-font-size-' + #{$name}), $value);
        }
    }
}
