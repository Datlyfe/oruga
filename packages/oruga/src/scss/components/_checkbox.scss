
/* @docs */
$checkbox-active-background-color: $primary !default;
$checkbox-background-color: transparent !default;
$checkbox-border-color: $grey !default;
$checkbox-border-radius: $base-border-radius !default;
$checkbox-border-width: 2px !default;
$checkbox-checked-box-shadow-color: $checkbox-active-background-color !default;
$checkbox-checked-box-shadow-length: 0 0 0.5em !default;
$checkbox-checked-box-shadow-opacity: 0.8 !default;
$checkbox-checkmark-color: $primary-invert !default;
$checkbox-disabled-opacity: $base-disabled-opacity !default;
$checkbox-focus-sibiling-box-shadow: $checkbox-checked-box-shadow-length rgba($grey, $checkbox-checked-box-shadow-opacity) !default;
$checkbox-label-padding: 0 0 0 .5em !default;
$checkbox-margin-sibiling: 0.5em !default;
$checkbox-size: 1.25em !default;
$checkbox-line-height: 1.25 !default;
/* @docs */

.o-checkbox {
    outline: none;
    display: inline-flex;
    align-items: center;
    cursor: pointer;
    position: relative;
    @include unselectable;
    @include avariable('line-height', 'checkbox-line-height', $checkbox-line-height);
    @include avariable('margin-right', 'checkbox-margin-sibiling', $checkbox-margin-sibiling);
    & + .o-checkbox:last-child {
        margin-right: 0;
    }
    input[type=checkbox] {
        position: absolute;
        left: 0;
        opacity: 0;
        outline: none;
        z-index: -1;
        + .o-checkbox-check {
            flex-shrink: 0;
            @include avariable('width', 'checkbox-size', $checkbox-size);
            @include avariable('height', 'checkbox-size', $checkbox-size);
            @include avariable('background', 'checkbox-background-color', $checkbox-background-color);
            @include avariable('border-radius', 'checkbox-border-radius', $checkbox-border-radius);
            @include avariable('border-width', 'checkbox-border-width', $checkbox-border-width);
            @include avariable('border-color', 'checkbox-border-color', $checkbox-border-color);
            border-style: solid;
            transition-property: background;
            @include avariable('transition-duration', 'transition-duration', $speed-slow);
            @include avariable('transition-timing-function', 'transition-timing', $easing);
        }
        &:checked + .o-checkbox-check {
            background-position: center;
            background-repeat: no-repeat;
            @include avariable('background-color', 'checkbox-active-background-color', $checkbox-active-background-color);
            @include avariable('background-image', 'checkbox-checkmark-color', url(checkmark($checkbox-checkmark-color)));
            @include avariable('border-color', 'checkbox-active-background-color', $checkbox-active-background-color);
            @each $name, $pair in $colors {
                $color: nth($pair, 1);
                $color-invert: nth($pair, 2);
                &.o-color-#{$name} {
                    @include avariable('background-color', ('color-' + #{$name}), $color);
                    @include avariable('background-image', ('checkbox-checkmark-color-invert-' + #{$name}), url(checkmark($color-invert)));
                    @include avariable('border-color', ('color-' + #{$name}), $color);
                }
            }
        }
        &:indeterminate + .o-checkbox-check {
            @include avariable('background-color', 'checkbox-active-background-color', $checkbox-active-background-color);
            @include avariable('background-image', 'checkbox-indeterminate-color', url(indeterminate($checkbox-checkmark-color)));
            @include avariable('border-color', 'checkbox-active-background-color', $checkbox-active-background-color);
            @each $name, $pair in $colors {
                $color: nth($pair, 1);
                $color-invert: nth($pair, 2);
                &.o-color-#{$name} {
                    @include avariable('background-color', ('color-' + #{$name}), $color);
                    @include avariable('background-image', ('checkbox-indeterminate-color-invert-' + #{$name}), url(indeterminate($color-invert)));
                    @include avariable('border-color', ('color-' + #{$name}), $color);
                }
            }
        }
        &:focus {
            + .o-checkbox-check {
                @include avariable('box-shadow', 'checkbox-focus-sibiling-box-shadow', $checkbox-focus-sibiling-box-shadow);
            }
            &:checked + .o-checkbox-check {
                @include evariable(
                    'box-shadow', $JOIN_EXPRESSION,
                    eparam('$param1', variable('checkbox-checked-box-shadow-length', $checkbox-checked-box-shadow-length)),
                    eparam('$param2', variable('checkbox-active-background-color', rgba($checkbox-active-background-color, $checkbox-checked-box-shadow-opacity)))
                );
                // box-shadow: $checkbox-checked-box-shadow-length rgba($checkbox-active-background-color, $checkbox-checked-box-shadow-opacity);
                @each $name, $pair in $colors {
                    $color: nth($pair, 1);
                    &.o-color-#{$name} {
                        @include evariable(
                            'box-shadow', $JOIN_EXPRESSION,
                            eparam('$param1', variable('checkbox-checked-box-shadow-length', $checkbox-checked-box-shadow-length)),
                            eparam('$param2', variable('color-' + #{$name}, $color))
                        );
                        // box-shadow: $checkbox-checked-box-shadow-length rgba($color, $checkbox-checked-box-shadow-opacity);
                    }
                }
            }
        }
    }
    .o-checkbox-label {
        @include avariable('padding', 'checkbox-label-padding', $checkbox-label-padding);
    }
    &.o-checkbox-button {
        display: flex;
    }
    &[disabled] {
        @include avariable('opacity', 'checkbox-disabled-opacity', $checkbox-disabled-opacity);
    }
    &:hover {
        input[type=checkbox]:not(:disabled) + .o-checkbox-check {
            @include avariable('border-color', 'checkbox-active-background-color', $checkbox-active-background-color);
            @each $name, $pair in $colors {
                $color: nth($pair, 1);
                &.o-color-#{$name} {
                    @include avariable('border-color', ('color-' + #{$name}), $color);
                }
            }
        }
    }
    @each $name, $value in $sizes {
        &.o-size-#{$name} {
            @include avariable('font-size', ('checkbox-font-size-' + #{$name}), $value);
        }
    }
}
